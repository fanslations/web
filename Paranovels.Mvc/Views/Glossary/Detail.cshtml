@using Paranovels.Common
@using Paranovels.DataModels
@using Paranovels.ViewModels
@using Thi.Core
@model GlossaryDetail
@{
    ViewBag.Title = Model.Raw + " - " + Model.Final;
    Layout = "~/Views/Shared/_Layout.cshtml";

    // needed in case release doesnot have summarize yet!
    Model.Summarize.SourceID = Model.ID;
    Model.Summarize.SourceTable = R.SourceTable.GLOSSARY;
}


<section class="section">
    <div class="header">
        <a href="javascript:history.go(-1);" class="action left"><i class="fa fa-chevron-circle-left"></i></a>
        <h1 class="title">
            @ViewBag.Title
        </h1>
    </div>
    <div class="content">
        <div class="detail-group">
            <strong>Language</strong>
            <div>
                @Model.RawLanguage.Translate(R.Language.Translate)
                @Html.ImproveThis(m => m.RawLanguage)
            </div>
        </div>
        <div class="detail-group">
            <strong>Term</strong>
            <div>
                @Model.Raw
                @Html.ImproveThis(m => m.Raw)
            </div>
        </div>
        <div class="detail-group">
            <strong>Translated</strong>
            <div>
                @Model.Final
                @Html.ImproveThis(m => m.Final)
            </div>
        </div>
        <div class="detail-group">
            <strong>Definition</strong>
            <div>
                @Model.Definition
                @Html.ImproveThis(m => m.Definition)
            </div>
        </div>
    </div>

</section>
<section class="section">
    <div class="content">
        <div class="toolbar clearfix">
            <div class="vote-score">
                <div class="vote @(Model.UserAction.Voted.GetValueOrDefault() == 1 ? "likes" : Model.UserAction.Voted.GetValueOrDefault() == -1 ? "dislikes" : "")">
                    <span role="button" class="action vote-up" data-vote='{"SourceID": @Model.ID, "SourceTable": @R.SourceTable.GLOSSARY, "Vote": 1}' title="i like this"><i class="fa fa-thumbs-o-up"></i></span>
                    <span class="score @((Model.Summarize.VoteUp - Model.Summarize.VoteDown) < 0 ? "dislikes" : "likes")">
                        @(Model.Summarize.VoteUp - Model.Summarize.VoteDown)
                    </span>
                    <span role="button" class="action vote-down" data-vote='{"SourceID": @Model.ID, "SourceTable": @R.SourceTable.GLOSSARY, "Vote": -1}' title="i dislike this"><i class="fa fa-thumbs-o-down"></i></span>
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-thumbs-o-up"></i>@Model.Summarize.VoteUp likes
                </div>
                <div>
                    <i class="fa fa-thumbs-o-down"></i>@Model.Summarize.VoteDown dislikes
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-eye"></i>@Model.Summarize.ViewCount views
                </div>
                <div>
                    <i class="fa fa-check-square-o"></i>@Model.Summarize.ReadCount reads
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-diamond"></i>@RatingHelper.DisplayRating(Model.Summarize)
                </div>
                <div>
                    <i class="fa @(Model.UserAction.QualityRated > 0 ? "fa-star" : "fa-star-o")"></i>@Model.Summarize.QualityCount users rated
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-comments"></i>@Model.Summarize.CommentCount comments
                </div>
                <div>
                 
                </div>
            </div>
        </div>
    </div>
</section>
<section class="section">
    <div class="content">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#comments" aria-controls="home" role="tab" data-toggle="tab"><i class="fa fa-comments"></i>Comments (@Model.Summarize.CommentCount)</a></li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="comments">
                @{
                    Html.RenderAction("Index", "Comment", new CommentCriteria { SourceID = Model.ID, SourceTable = R.SourceTable.GLOSSARY, Sorted = Request.QueryString["sorted"] });
                }
            </div>
        </div>
    </div>
</section>
