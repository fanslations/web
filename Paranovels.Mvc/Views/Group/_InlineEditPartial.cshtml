@using Paranovels.Common
@using Paranovels.DataModels
@using Paranovels.ViewModels
@using Thi.Core
@model InlineEditForm<GroupDetail>
@{
    Layout = null;
}
@if (!User.Identity.IsAuthenticated)
{
    Html.RenderPartial("_InlineEditorUnauthorizedPartial");
    return;
}
<div id="@(Model.InlineEditProperty)Container" class="inline-editor">
    <form id="@(Model.InlineEditProperty)Form" method="post" action="@Url.Action("Form")" enctype="multipart/form-data">
        <div class="form-group">
            @if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.Status))
            {
                <fieldset class="form-control">
                    <legend class="sr-only">Status</legend>
                    @foreach (var status in R.GroupStatus.Translate)
                    {
                    <label class="radio-inline">
                        <input id="status-@status.Key" type="radio" name="@Model.InlineEditProperty" value="@status.Key" required>
                        @status.Value
                    </label>
                    }
                </fieldset>
            }
            else if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.ImageUrl))
            {
                <label>
                    <input type="file" name="image" required />
                </label>
                <input type="hidden" name="ImagePath" value="/Fanslations/Groups/@Model.Model.Name" />
            }
            else if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.Name))
            {
                <label for="@Model.InlineEditProperty" class="sr-only">@Model.InlineEditProperty</label>
                <input id="@Model.InlineEditProperty" type="text" class="form-control" name="@Model.InlineEditProperty" value="@Model.Model.Name" required />
            }
            else if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.About))
            {
                <label for="@Model.InlineEditProperty" class="sr-only">@Model.InlineEditProperty</label>
                <textarea id="@Model.InlineEditProperty" class="form-control" rows="2" name="@Model.InlineEditProperty" required></textarea>

            }
            else if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.Feeds))
            {
                <script>
                    require(['jquery'], function($) {
                        'use strict';
                        var $status = $('#@Model.InlineEditProperty-status').removeClass();
                        var $submit = $('#@(Model.InlineEditProperty)Submit');
                        $('#@Model.InlineEditProperty').on('change', function() {

                            var formData = new FormData();
                            formData.append("feedUrl", $('#@Model.InlineEditProperty').val());
                            $.ajax({
                                type: 'post',
                                url: '@Url.Action("CheckFeed")',
                                data: formData, //$form.serialize(),
                                contentType: false,
                                processData: false,
                                async: false,
                                cache: false,
                                success: function(datas) {
                                    if (datas.length == 0) {
                                        $status.addClass('alert alert-danger').html('Found ' + datas.length + ' items in feed. Please check feed url make sure it correct.');
                                        $submit.attr('disabled', 'disabled');
                                    } else {
                                        $submit.removeAttr('disabled');
                                    }
                                }
                            });
                        });
                    });
                </script>
                <div class="alert alert-info">
                    <p>Thank you for helping us update the rss feed for @Model.Model.Name group.</p>
                    <p>A rss feed of translations group is usually end with <b>/feed/</b> on wordpress and <b>/feeds/posts/default?alt=rss</b> on blogspot.</p>
                </div>
                var feed = Model.Model.Feeds.SingleOrDefault(w => w.ID == int.Parse(Request.QueryString["FeedID"] ?? "0")) ?? new Feed { Status = R.FeedStatus.ACTIVE };
                <label for="@Model.InlineEditProperty" class="sr-only">Rss Feed Url</label>
                <input id="@Model.InlineEditProperty" type="url" class="form-control" name="@(Model.InlineEditProperty)[0].@feed.PropertyName(m=>m.Url)" value="@feed.Url" required />
                <div class="@(feed.ID > 0 ? "margin-top-10px" : "hidden")">
                    @foreach (var status in R.FeedStatus.Translate)
                    {
                        <label class="checkbox-inline">
                            <input type="radio" name="@(Model.InlineEditProperty)[0].@feed.PropertyName(m=>m.Status)" value="@status.Key" checked="@(status.Key == feed.Status)" />
                            <strong>@status.Value</strong>
                        </label>

                    }
                    <input type="hidden" class="form-control" name="@(Model.InlineEditProperty)[0].@feed.PropertyName(m => m.ID)" value="@feed.ID" required />
                </div>
            }
            else if (Model.InlineEditProperty == Model.PropertyName(m => m.Model.Glossaries))
            {
                var glossary = new GlossaryForm();
                <label>
                    <input type="text" class="form-control" name="@(Model.InlineEditProperty)[0].@(glossary.PropertyName(m=>m.Raw))" required />
                </label>
                <label>
                    <input type="text" class="form-control" name="@(Model.InlineEditProperty)[0].@(glossary.PropertyName(m=>m.Final))" required />
                </label>
                <label>
                    <textarea class="form-control" rows="2" name="@(Model.InlineEditProperty)[0].@(glossary.PropertyName(m=>m.Definition))" required></textarea>
                </label>
            }
            else if (Model.InlineEditProperty.Contains("Url"))
            {
                <label>
                    <input type="url" class="form-control" name="@Model.InlineEditProperty" required />
                </label>
            }
            else
            {
                <label>
                    <input type="text" class="form-control" name="@Model.InlineEditProperty" required />
                </label>
            }
        </div>
        <div class="hidden">
            <input type="hidden" name="ID" value="@Model.ID" />
            <input type="hidden" name="InlineEditProperty" value="@Model.InlineEditProperty" />
        </div>
        <div id="@Model.InlineEditProperty-status"></div>
        <div class="form-group clearfix">
            <button id="@(Model.InlineEditProperty)Submit" type="submit" class="btn btn-primary"><i class="fa fa-save"></i>Save</button>
            <button id="@(Model.InlineEditProperty)Cancel" type="button" class="btn btn-default"><i class="fa fa-times-circle"></i>Cancel</button>
        </div>
    </form>
</div>