@using Paranovels.Common
@using Paranovels.DataModels
@using Paranovels.ViewModels
@using Thi.Core
@model ReleaseDetail
@{
    ViewBag.Title = (Model.Type == R.ReleaseType.CHAPTER && Model.Series != null) ? Model.Series.Title + " " + Model.Title.ExtractVolume() + " " + Model.Title.ExtractChapter()
                                                                                  : Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";

    // needed in case release doesnot have summarize yet!
    Model.Summarize.SourceID = Model.ID;
}


<section class="section">
    <div class="header">
        <a href="javascript:history.go(-1);" class="action left"><i class="fa fa-chevron-circle-left"></i></a>
        <h1 class="title">
            @ViewBag.Title
        </h1>
    </div>
    @{ Html.RenderPartial("~/Views/UserList/_AddSeriesToList.cshtml", new SeriesDetail { ID = Model.SeriesID, UserLists = Model.UserLists, Connectors = Model.Connectors }); }
    <div class="content">
        <div class="detail-group">
            <strong class="sr-only">Summary</strong>
            <div>
                @Html.Raw(Model.Summary.FormatString(0, 20, "No summary available. Click on 'Edit' to help us update it."))
                @Html.ImproveThis(m => m.Summary)
            </div>
        </div>
        <div class="detail-group">
            <strong>Release Title</strong>
            <div>
                @Model.Title
                @Html.ImproveThis(m => m.Title)
            </div>
        </div>
        <div class="detail-group">
            <strong>Release Url</strong>
            <div>
                <a href="@Url.Action("Out", "Release", new { ID = Model.ID, Url = Model.Url, Seo = Model.Title.ToSeo() })">@Model.Url</a>
                @Html.ImproveThis(m => m.Url)
            </div>
        </div>
        <div class="detail-group">
            <strong>Release Date</strong>
            <div>
                @Html.Raw(Model.Date.FormatDate())
                @Html.ImproveThis(m => m.Date)
            </div>
        </div>
        <div class="detail-group">
            <strong>Release Type</strong>
            <div>
                @Html.Raw(Model.Type.Translate(R.ReleaseType.Translate))
                @Html.ImproveThis(m => m.Type)
            </div>
        </div>
        <div class="detail-group">
            <strong>Series Title</strong>
            <div>
                @if (Model.SeriesID > 0)
                {
                    <a href="@Url.Action("Detail", "Series", new { ID = Model.SeriesID, Seo = Model.Series.Title.ToSeo() })">@Model.Series.Title</a>
                }
                else
                {
                    <text>No series linked to this release yet! Do you know the title of this series? Click on 'Edit' to help us update it.</text>
                }
                @Html.ImproveThis(m => m.SeriesID)
            </div>
        </div>
        <div class="detail-group">
            <strong>Translations Group</strong>
            <div>
                @if (Model.GroupID > 0)
                {
                    <a href="@Url.Action("Detail", "Group", new {ID = Model.GroupID, Seo=Model.Group.Name.ToSeo()})">@Model.Group.Name</a>
                }
                else
                {
                    <text>No group linked to this release yet! Do you know whose translated this series? Click on 'Edit' to help us update it.</text>
                }
                @Html.ImproveThis(m => m.GroupID)
            </div>
        </div>
    </div>

</section>
<section class="section">
    <div class="content">
        <div class="toolbar clearfix">
            <div class="read-it animated bounceIn">
                @{
                    var autoAddListIDs = Model.UserLists.Where(w => w.IsDeleted == false && w.IsAutoAddWhenRead).Select(s => s.ID).ToList();
                    var inListIDs = Model.Connectors.Where(w => w.IsDeleted == false && w.ConnectorType == R.ConnectorType.SERIES_USERLIST && w.SourceID == Model.SeriesID).Select(s => s.TargetID).ToList();
                    // get list IDs that has 'IsAutoAddWhenRead' enabled but not already in list
                    var notInListIDs = autoAddListIDs.Except(inListIDs);

                }
                <a href="@Url.Action("Read", "Release", new { Model.ID, Model.Url, Seo = Model.Title.ToSeo(), SeriesID = Model.SeriesID, ListIDs = string.Join(",", notInListIDs) })" target="_blank"><i class="fa @(Model.UserAction.IsRead == true ? "fa-check-square-o" : "fa-arrow-right")"></i>Read It</a>
            </div>
            <div class="vote-score">
                <div class="vote @(Model.UserAction.Voted.GetValueOrDefault() == 1 ? "likes" : Model.UserAction.Voted.GetValueOrDefault() == -1 ? "dislikes" : "")">
                    <span role="button" class="action vote-up" data-vote='{"SourceID": @Model.ID, "SourceTable": @R.SourceTable.RELEASE, "Vote": 1}' title="i like this"><i class="fa fa-thumbs-o-up"></i></span>
                    <span class="score @((Model.Summarize.VoteUp - Model.Summarize.VoteDown) < 0 ? "dislikes" : "likes")">
                        @(Model.Summarize.VoteUp - Model.Summarize.VoteDown)
                    </span>
                    <span role="button" class="action vote-down" data-vote='{"SourceID": @Model.ID, "SourceTable": @R.SourceTable.RELEASE, "Vote": -1}' title="i dislike this"><i class="fa fa-thumbs-o-down"></i></span>
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-thumbs-o-up"></i>@Model.Summarize.VoteUp likes
                </div>
                <div>
                    <i class="fa fa-thumbs-o-down"></i>@Model.Summarize.VoteDown dislikes
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-eye"></i>@Model.Summarize.ViewCount views
                </div>
                <div>
                    <i class="fa fa-check-square-o"></i>@Model.Summarize.ReadCount reads
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-diamond"></i>@RatingHelper.DisplayRating(Model.Summarize)
                </div>
                <div>
                    <i class="fa @(Model.UserAction.QualityRated > 0 ? "fa-star" : "fa-star-o")"></i>@Model.Summarize.QualityCount users rated
                </div>
            </div>
            <div class="info">
                <div>
                    <i class="fa fa-comments"></i>@Model.Summarize.CommentCount comments
                </div>
                <div>
                    <i class="fa fa-list-alt"></i>On @Model.Connectors.Count(w => w.ConnectorType == R.ConnectorType.SERIES_USERLIST && w.SourceID == Model.SeriesID) lists
                </div>
            </div>
        </div>
    </div>
</section>
@if (User.IsAdministrator())
{
    <section class="section">
        <div class="content">
            <div class="toolbar clearfix">
                <div class="info">
                    <div>
                        @if (Model.Sticky.ID > 0 && Model.Sticky.IsDeleted == false)
                        {
                            <a role="button" class="action sticky" data-sticky='{ "ID": @Model.Sticky.ID, "SourceID": @Model.ID, "SourceTable": @R.SourceTable.RELEASE, "IsDeleted": true }' title="click to unpin"><i class="fa fa-thumb-tack color-red"></i>Pinned</a>
                        }
                        else
                        {
                            <a role="button" class="action sticky" data-sticky='{ "ID": @Model.Sticky.ID, "SourceID": @Model.ID, "SourceTable": @R.SourceTable.RELEASE }' title="click to pin"><i class="fa fa-thumb-tack"></i>Not pinned</a>
                        }
                    </div>
                    <div>

                    </div>
                </div>
            </div>
        </div>
    </section>
}
@if (Model.Series.ID > 0)
{
    <section class="section mobile">
        <div class="content pagination-container">
            <ul class="pagination">
                <li class="active previous">
                    <a class="" href="@Url.Action("PreviousChapter", "Release", new { ID = Model.Series.ID, Seo = Model.Series.Title.ToSeo(), Model.Date })"><i class="fa fa-arrow-circle-left"></i>Previous Chapter</a>

                </li>
                <li class="active toc">
                    <a class="" href="@Url.Action("Detail", "Series", new { ID = Model.Series.ID, Seo = Model.Series.Title.ToSeo(), Tab = "Releases" })">Table of Contents</a>

                </li>
                <li class="active next">
                    <a class="" href="@Url.Action("NextChapter", "Release", new { ID = Model.Series.ID, Seo = Model.Series.Title.ToSeo(), Model.Date })">Next Chapter<i class="fa fa-arrow-circle-right right"></i></a>

                </li>
            </ul>
            @*<a class="pull-left btn btn-success" href="@Url.Action("PreviousChapter", "Release", new {ID = Model.Series.SeriesID, Seo = Model.Series.Title.ToSeo(), Model.Date})"><i class="fa fa-arrow-circle-left"></i>Previous Chapter</a>
            <a class="btn btn-success" href="@Url.Action("Detail", "Series", new {ID = Model.Series.SeriesID, Seo = Model.Series.Title.ToSeo(), Tab = "Releases"})">Table of Contents (All Releases)</a>
            <a class="pull-right btn btn-success" href="@Url.Action("NextChapter", "Release", new {ID = Model.Series.SeriesID, Seo = Model.Series.Title.ToSeo(), Model.Date})">Next Chapter<i class="fa fa-arrow-circle-right right"></i></a>*@
        </div>
    </section>
}
<section class="section">
    <div class="content">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#comments" aria-controls="home" role="tab" data-toggle="tab"><i class="fa fa-comments"></i>Comments (@Model.Summarize.CommentCount)</a></li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="comments">
                @{
                    Html.RenderAction("Index", "Comment", new CommentCriteria { SourceID = Model.ID, SourceTable = R.SourceTable.RELEASE, Sorted = Request.QueryString["sorted"] });
                }
            </div>
        </div>
    </div>
</section>
