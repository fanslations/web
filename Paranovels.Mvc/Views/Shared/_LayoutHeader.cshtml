@using Thi.Core
@model dynamic

@{
    var isDebug = Server.MachineName.StartsWith("UO-");
    var portal = Model.Portal ?? "public";
}
<!-- Force latest IE rendering engine or ChromeFrame if installed -->
<!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
<meta charset="UTF-8" />
<meta name="MobileOptimized" content="320">
<meta name="HandheldFriendly" content="True">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<link href="/favicon.ico" rel="icon" type="image/x-icon" />
<link rel="apple-touch-icon" href="/favicon.ico">
<!-- Alternates -->
<link rel="alternate" type="application/atom+xml" title="@ViewBag.Title » Feed" href="@Request.Url.ToString().UrlAddQuery("alt","atom10")">
<link rel="alternate" type="application/rss+xml" title="@ViewBag.Title » Feed" href="@Request.Url.ToString().UrlAddQuery("alt","rss20")">
<!-- Open Graph Tags -->
<meta property="og:type" content="website" />
<meta property="og:title" content="@ViewBag.Title" />
<meta property="og:url" content="@Request.Url" />
<meta property="og:site_name" content="Fanslations" />
<meta property="og:image" content="http://www.fanslations.com/assets/img/no-imagae.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:site" content="@("@fanslations")" />
<meta property="fb:app_id" content="1597519003870102" />
@if (isDebug)
{
    <link href="/assets/css/paranovels.@(portal).css" rel="stylesheet" type="text/css" media="all" />
}
else
{
    <link href="/assets/css/paranovels.@(portal).min.css" rel="stylesheet" type="text/css" media="all" />
}
<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!--[if lt IE 9]>
  <script src="//oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="//oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
<script type="text/javascript">
    // get start time
    var beforeload = new Date().getTime();

    var getCookie = function getCookie(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1);
            if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
        }
        return "";
    };
    
    var raf = requestAnimationFrame || mozRequestAnimationFrame || webkitRequestAnimationFrame || msRequestAnimationFrame;
    var cb = function() {
        var l = document.createElement('link');
        l.rel = 'stylesheet';
        l.href = '@(isDebug ? string.Format("/assets/css/paranovels.{0}.css", portal) : string.Format("/assets/css/paranovels.{0}.min.css", portal))';
        var h = document.getElementsByTagName('head')[0];
        h.parentNode.insertBefore(l, h);
    };

    if (raf) raf(cb);
    window.onload = function pnLoaded() {
        if (!raf) cb();

        // get loaded time
        var aftrload = new Date().getTime();
        // Time calculating in seconds
        document.getElementById("client-load-time").innerText = (aftrload - beforeload) / 1000;
        document.getElementById("server-execute-time").innerText = getCookie('X-Stopwatch');
    };
</script>