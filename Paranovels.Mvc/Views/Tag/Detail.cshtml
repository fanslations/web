@using Paranovels.Common
@using Paranovels.DataModels
@using Paranovels.ViewModels
@using Thi.Core
@model Paranovels.ViewModels.TagDetail
@{
    ViewBag.Title = Model.TagType.Translate(R.TagType.Translate) + " - " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var seo = ViewContext.RouteData.Values["Seo"].ToString();

    Func<Series, bool> filterStatus = ts => seo.Contains(ts.Status.Translate(R.TranslationStatus.Translate), StringComparison.OrdinalIgnoreCase);
    var hasStatusFilter = R.TranslationStatus.Translate.Any(a => seo.Contains(a.Value, StringComparison.OrdinalIgnoreCase));
    if (!hasStatusFilter)
    {
        filterStatus = t => true;
    }
}
<section class="section">
    <div class="header">
        <a href="@Url.Action("List", new { ID = Model.TagType, Seo = Model.Name.ToSeo() })" class="action left"><i class="fa fa-chevron-circle-left"></i></a>
        <h1 class="title">
            @ViewBag.Title
        </h1>
    </div>
    <div class="content">
        <div class="detail-group">
            <strong class="sr-only">Synopsis</strong>
            <div>
                @Html.Raw(Model.Description.FormatString())
                @Html.ImproveThis(m => m.Description)
            </div>
        </div>
    </div>
</section>
<section class="section">
    <div class="content">
        <ul class="list-unstyled list-inline">
            <li>
                <i class="fa @(hasStatusFilter ? "" : "fa-filter")"></i>
                <a href="@Url.Action("Detail", "Tag", new { ID = ViewContext.RouteData.Values["ID"], Seo = (Model.TagType.Translate(R.TagType.Translate)).ToSeo() })">All</a>
            </li>
            @foreach (var status in R.TranslationStatus.Translate)
            {
                <li>
                    <i class="fa @(seo.Contains(status.Value, StringComparison.OrdinalIgnoreCase) ? "fa-filter" : "")"></i>
                    <a href="@Url.Action("Detail", "Tag", new { ID = ViewContext.RouteData.Values["ID"], Seo = (Model.TagType.Translate(R.TagType.Translate) + "-" + Model.Name + "-" + status.Value).ToSeo() })">@status.Value</a>
                </li>
            }
        </ul>
    </div>
    @{
        Html.RenderPartial("~/Views/Series/_SeriesGridPartial.cshtml", new PagedList<SeriesGrid>
        {
            Data = Model.Series.Where(filterStatus).Select(s => new SeriesGrid
            {
                ID = s.ID,
                Title = s.Title,
                UpdatedDate = s.UpdatedDate,
                Status = s.Status,
                Synopsis = s.Synopsis,
                ImageUrl = s.ImageUrl,
                Groups = new List<Group>(),
                UserLists = new List<UserList>(),
                Connectors = new List<Connector>(),
                Releases = new List<Release>(),
                Tags = new List<Tag>()
            }).AsQueryable().Sort(new BaseCriteria { Sorted = Request.QueryString["sorted"] }).ToList()
        });
    }
</section>
