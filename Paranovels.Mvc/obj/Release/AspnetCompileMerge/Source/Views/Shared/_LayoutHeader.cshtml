@*@using Thi.Core.Web*@

@model dynamic

@{
    var isDebug = Server.MachineName.StartsWith("UO-");
    var portal = Model.Portal ?? "public";
}
<!-- Force latest IE rendering engine or ChromeFrame if installed -->
<!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
<meta charset="UTF-8" />
<meta http-equiv="cleartype" content="on">
<meta name="MobileOptimized" content="320">
<meta name="HandheldFriendly" content="True">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<link href="/favicon.ico" rel="icon" type="image/x-icon" />
@if (isDebug)
{
    <link href="/assets/css/paranovels.@(portal).css" rel="stylesheet" type="text/css" media="all" />
}
else
{
    <link href="/assets/css/paranovels.@(portal).min.css" rel="stylesheet" type="text/css" media="all" />
}
<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!--[if lt IE 9]>
  <script src="/content/js/html5shiv.min.js" type="text/javascript"></script>
  <script src="/content/js/respond.min.js" type="text/javascript"></script>
<![endif]-->
<script type="text/javascript">
    var beforeload = new Date().getTime();
    window.onload = function gettimeload() {
        var aftrload = new Date().getTime();
        // Time calculating in seconds
        document.getElementById("client-load-time").innerText = (aftrload - beforeload) / 1000;
    };
</script>