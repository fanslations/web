@using Paranovels.Common
@using Paranovels.DataModels
@using Thi.Core
@model Paranovels.ViewModels.TagDetail
@{
    ViewBag.Title = Model.TagType.Translate(R.TagType.Translate) + " - " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var seo = ViewContext.RouteData.Values["Seo"].ToString();

    Func<Series, bool> filterStatus = ts => seo.Contains(ts.Status.Translate(R.TranslationStatus.Translate), StringComparison.OrdinalIgnoreCase);
    var hasStatusFilter = R.TranslationStatus.Translate.Any(a => seo.Contains(a.Value, StringComparison.OrdinalIgnoreCase));
    if (!hasStatusFilter)
    {
        filterStatus = t => true;
    }
}
<section class="section">
    <div class="header">
        <a href="@Url.Action("List", new { ID = Model.TagType, Seo = Model.Name.ToSeo() })" class="action left"><i class="fa fa-chevron-circle-left"></i></a>
        <h1 class="title">
            @ViewBag.Title
        </h1>
    </div>
    <div class="content">
        <div class="detail-group">
            <strong class="sr-only">Synopsis</strong>
            <div>
                @Html.Raw(Model.Description.FormatString())
                @Html.ImproveThis(m => m.Description)
            </div>
        </div>
    </div>
</section>
<section class="section">
    <div class="header">
        <h2 class="title">
            Novels
        </h2>
    </div>
    <div class="content">
        <ul class="list-unstyled list-inline">
            <li>Filter by status</li>
            <li>
                <i class="fa @(hasStatusFilter ? "" : "fa-filter")"></i>
                <a href="@Url.Action("Detail", "Tag", new { ID = ViewContext.RouteData.Values["ID"], Seo = (Model.TagType.Translate(R.TagType.Translate)).ToSeo() })">All</a>
            </li>
            @foreach (var status in R.TranslationStatus.Translate)
            {
                <li>
                    <i class="fa @(seo.Contains(status.Value, StringComparison.OrdinalIgnoreCase) ? "fa-filter" : "")"></i>
                    <a href="@Url.Action("Detail", "Tag", new { ID = ViewContext.RouteData.Values["ID"], Seo = (Model.TagType.Translate(R.TagType.Translate) + "-" + Model.Name + "-" + status.Value).ToSeo() })">@status.Value</a>
                </li>
            }
        </ul>
    </div>
    <ul class="grid">
        @foreach (var item in Model.Series.Where(filterStatus))
        {
            <li class="row-list">
                <div class="col-image">
                    <a href="#" class="">
                        <img src="@item.ImageUrl.ToGoogleDriveImageUrl()" class="img-rounded" alt="@item.Title's cover" />
                    </a>
                </div>
                <div class="col-content">
                    <div>
                        <a href="@Url.Action("Detail", "NovelTracker", new{ ID = item.SeriesID, Seo = item.Title.ToSeo() })">@item.Title</a>
                    </div>
                    <div>@Html.Raw(item.Synopsis.FormatString(100))</div>
                    <ul class="list-unstyled list-inline">
                        <li title="Status">
                            <i class="fa fa-certificate"></i><a href="@Url.Action("Detail", "Tag", new { ID = ViewContext.RouteData.Values["ID"], Seo = (Model.TagType.Translate(R.TagType.Translate) + "-" + Model.Name + "-" + item.Status.Translate(R.TranslationStatus.Translate)).ToSeo() })">@Html.Raw(item.Status.Translate(R.TranslationStatus.Translate).FormatString())</a>
                        </li>
                        <li class="divider divider-pipe divider-black"></li>
                        <li title="Updated Date"><i class="fa fa-calendar"></i>@item.UpdatedDate.FormatDate()</li>
                    </ul>
                </div>
            </li>
        }
    </ul>
</section>
